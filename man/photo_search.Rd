% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/photo_search.R
\name{photo_search}
\alias{photo_search}
\title{photo_search}
\usage{
photo_search(mindate = "2019-01-01", maxdate = "2019-01-01",
  text = NULL, tags = NULL, bbox = NULL, woeid = NULL,
  has_geo = TRUE)
}
\arguments{
\item{mindate}{String, minimum date of photograph for search provide as
"YYYY-MM-DD".}

\item{maxdate}{String, maximum date of photograph for search provide as
"YYYY-MM-DD".}

\item{text}{String, optional text to be searched.}

\item{tags}{String, optional tags to filter by.}

\item{bbox}{String, optional bounding box of search area provide as:
"minimum_longitude,minimum_latitude,maximum_longitude,maximum_latitude".}

\item{woeid}{String, optional "where on earth identifier" can be supplied instead
of bbox. Use function find_place to obtain woe_id for a place.}

\item{has_geo}{Logical, optional arguement for whether returned photos need
to be georeference.}
}
\value{
Output will be a dataframe consisting of 57 variables including;
latitude and longitude of photograph, date and time it was taken,
associated tags and image urls.

Full list of variables returned: id, owner, secret, server, farm, title,
ispublic, isfriend, isfamily, license, datetaken, datetakengranularity,
datetakenunknown, count_views, count_comments, count_faves, tags, latitude,
longitude, accuracy, context, place_id, woeid, geo_is_family,
geo_is_friend, geo_is_contact, geo_is_public, url_sq, height_sq, width_sq,
url_t, height_t, width_t, url_s, height_s,	width_s	url_q, height_q,
width_q, url_m, height_m, width_m, url_n, height_n, width_n, url_z,
height_z, width_z, url_c, height_c, width_c, url_l, height_l, width_l,
url_o, height_o, width_o.
}
\description{
Takes user defined search query and return the image metadata for all those
that match search terms. Uses the flickr.photos.search API method from the
Flickr API. This search method requires a limiting factor to prevent
parameterless searches - to enure this is met the function requires both a
minimum and a maximum date that searched photographs were taken on. See
\url{https://www.flickr.com/services/api/flickr.photos.search.html} for more
information on the API method.
}
\details{
Note: if this is the first function of the package and you do not enter you
API key in the arguement api_key you use you will be prompted to enter your
API key or save it using the save_key function. API keys are avialable from
\url{https://www.flickr.com/services/apps/create/apply}. Using the save_key
function will save your key as a .Rda file which can then be called to when
using any other function.
}
\examples{
\dontrun{
photo_search(
  mindate = "2019-01-01",
  maxdate = "2019-01-02",
  text = "tree",
  bbox = "-13.623047,47.279229,3.251953,60.630102",
  has_geo = TRUE
)


photo_search(
  mindate = "2019-01-01",
  maxdate = "2019-01-02",
  text = "tree",
  bbox = "-13.623047,47.279229,3.251953,60.630102",
  has_geo = TRUE
)
}

}
